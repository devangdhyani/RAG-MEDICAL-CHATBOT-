name: Deploy Application Docker Image to Azure VM

on:
  push:
    branches: [main]

jobs:
  Continuous-Integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 1. Login to Azure using Service Principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      # 2. Build, tag, and push Docker image to Azure Container Registry (ACR)
      - name: Build and Push Docker image to ACR
        run: |
          ACR_NAME=${{ secrets.ACR_REPO }}    # Example: medicalchatbot
          IMAGE_NAME=medicalchatbot-app
          IMAGE_TAG=latest
          ACR_LOGIN_SERVER=${{ secrets.ACR_LOGIN_SERVER }}  # Example: medicalchatbot.azurecr.io

          echo "Logging into ACR..."
          az acr login --name $ACR_NAME

          echo "Building Docker image..."
          docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG .

          echo "Pushing Docker image..."
          docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG

          echo "image=$ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT

  Continuous-Deployment:
    needs: Continuous-Integration
    runs-on: self-hosted  # your Azure VM runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 1. Login to Azure using SP
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      # 2. Login to ACR using Azure CLI (via SP identity)
      - name: Login to ACR
        run: |
          az acr login --name ${{ secrets.ACR_REPO }}

      # 3. Pull and Run Docker image from ACR on the self-hosted runner (VM)
      - name: Run Docker container on VM
        run: |
          ACR_LOGIN_SERVER=${{ secrets.ACR_LOGIN_SERVER }}
          IMAGE_NAME=medicalchatbot-app
          IMAGE_TAG=latest

          echo "Pulling image from ACR..."
          docker pull $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG

          echo "Stopping old container (if running)..."
          docker stop medicalchatbot-container || true
          docker rm medicalchatbot-container || true

          echo "Running new container..."
          docker run -d \
            --name medicalchatbot-container \
            -e PINECONE_API_KEY="${{ secrets.PINECONE_API_KEY }}" \
            -e GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}" \
            -p 8080:8080 \
            $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG
